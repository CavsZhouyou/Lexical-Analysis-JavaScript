{"version":3,"sources":["../src/BufferStorage.js"],"names":["fs","require","BufferStorage","file","length","offset","position","buffer","Buffer","alloc","bytes","readSync","console","log"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;AASA,IAAIA,KAAKC,QAAQ,IAAR,CAAT,C,CAAwB;;IAElBC,a;AACJ,yBAAYC,IAAZ,EAAkBC,MAAlB,EAA0B;AAAA;;AACxB,SAAKD,IAAL,GAAYA,IAAZ,CADwB,CACN;AAClB,SAAKC,MAAL,GAAcA,MAAd,CAFwB,CAEF;AACtB,SAAKC,MAAL,GAAc,CAAd,CAHwB,CAGP;AACjB,SAAKC,QAAL,GAAgB,CAAhB,CAJwB,CAIL;AACnB,SAAKC,MAAL,GAAc,IAAIC,OAAOC,KAAX,CAAiBL,SAAS,CAA1B,CAAd,CALwB,CAKoB;AAC7C;;;;2BAEM;AACL,UAAIM,QAAQV,GAAGW,QAAH,CAAY,KAAKR,IAAjB,EAAuB,KAAKI,MAA5B,EAAoC,KAAKF,MAAzC,EAAiD,KAAKA,MAAL,GAAc,KAAKD,MAApE,EAA4E,KAAKE,QAAjF,CAAZ;AACAM,cAAQC,GAAR,CAAYH,KAAZ;AACD;;;;;;kBAGYR,a","file":"BufferStorage.js","sourcesContent":["/*\r\n * @Author: zhouyou@werun \r\n * @Descriptions: 缓存区存储对象 \r\n * @TodoList: 无\r\n * @Date: 2018-10-24 09:33:50 \r\n * @Last Modified by: zhouyou@werun\r\n * @Last Modified time: 2018-10-24 10:34:59\r\n */\r\n\r\nlet fs = require(\"fs\"); // 引入文件模块依赖\r\n\r\nclass BufferStorage {\r\n  constructor(file, length) {\r\n    this.file = file; // 打开文件标识符\r\n    this.length = length; // 缓存区长度\r\n    this.offset = 0; // 缓存区写入数据时的偏移量\r\n    this.position = 0; // 读入文件时的初始位置\r\n    this.buffer = new Buffer.alloc(length * 2); // 采用双缓存区策略 \r\n  }\r\n\r\n  read() {\r\n    let bytes = fs.readSync(this.file, this.buffer, this.offset, this.offset + this.length, this.position);\r\n    console.log(bytes);\r\n  }\r\n}\r\n\r\nexport default BufferStorage;"]}