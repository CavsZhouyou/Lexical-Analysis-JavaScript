{"version":3,"sources":["../src/lexicalAnalysis.js"],"names":["fs","require","DOCUMENT_PATH","BUFFER_LENGTH","console","log","open","err","fd","error","buf","BufferStorage","getString"],"mappings":";;AAaA;;;;;;AAA6C;AAC7C,IAAIA,KAAKC,QAAQ,IAAR,CAAT,C,CAAwB;;AAExB;;;AAhBA;;;;;;;;;AAUA;;;AASA,IAAMC,gBAAgB,qBAAtB;AAAA,IAA6C;AAC3CC,gBAAgB,EADlB,C,CACsB;;AAEtB;;;AAGAC,QAAQC,GAAR,CAAY,gBAAgBH,aAA5B;AACAF,GAAGM,IAAH,CAAQJ,aAAR,EAAuB,IAAvB,EAA6B,UAAUK,GAAV,EAAeC,EAAf,EAAmB;AAC9C;AACA,MAAID,GAAJ,EAAS;AACP,WAAOH,QAAQK,KAAR,CAAcF,GAAd,CAAP;AACD;AACDH,UAAQC,GAAR,CAAY,SAAZ;AACA,MAAIK,MAAM,IAAIC,uBAAJ,CAAkBH,EAAlB,EAAsBL,aAAtB,CAAV;AACA;AACAC,UAAQC,GAAR,CAAYK,IAAIE,SAAJ,CAAc,EAAd,EAAkB,EAAlB,CAAZ;AAED,CAVD","file":"lexicalAnalysis.js","sourcesContent":["/*\r\n * @Author: zhouyou@werun \r\n * @Descriptions: js 实现 c 语言的词法分析器\r\n * @TodoList: 无\r\n * @Date: 2018-10-20 18:46:33 \r\n * @Last Modified by: zhouyou@werun\r\n * @Last Modified time: 2018-10-24 19:03:57\r\n */\r\n\r\n\r\n/**\r\n * 依赖模块引入\r\n */\r\nimport BufferStorage from './BufferStorage'; // 引入 BufferStorage 缓存区操作类\r\nlet fs = require(\"fs\"); // 引入文件模块依赖\r\n\r\n/**\r\n * 常量定义\r\n */\r\nconst DOCUMENT_PATH = \"./document/test.txt\", // 源文件路径\r\n  BUFFER_LENGTH = 10; // 缓存区长度\r\n\r\n/**\r\n * 打开并处理文件\r\n */\r\nconsole.log(\"准备打开已存在的文件：\" + DOCUMENT_PATH);\r\nfs.open(DOCUMENT_PATH, 'r+', function (err, fd) {\r\n  // 错误处理\r\n  if (err) {\r\n    return console.error(err);\r\n  }\r\n  console.log(\"文件打开成功！\");\r\n  let buf = new BufferStorage(fd, BUFFER_LENGTH);\r\n  // console.log(buf.getCharacter(25));\r\n  console.log(buf.getString(18, 25));\r\n\r\n});"]}